// <auto-generated />
using System;
using DotNetPracticeExamples.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotNetPracticeExamples.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20221101162017_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNetPracticeExamples.Models.Album", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverArtUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ForSale")
                        .HasColumnType("bit");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverArtUrl = "https://www.website.com/coverart.jpg",
                            ForSale = true,
                            Genre = "Psytrance",
                            GenreId = 1,
                            StatusId = 1,
                            Title = "Psytrance Album"
                        },
                        new
                        {
                            Id = 2,
                            CoverArtUrl = "https://www.popwebsite.com/coverart.jpg",
                            ForSale = false,
                            Genre = "Pop",
                            GenreId = 4,
                            StatusId = 2,
                            Title = "Popular Album"
                        },
                        new
                        {
                            Id = 3,
                            CoverArtUrl = "https://www.mixalbum.com/coverart.jpg",
                            ForSale = true,
                            Genre = "Various",
                            GenreId = 10,
                            StatusId = 3,
                            Title = "Mix Album"
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.Composites.AlbumDistributorComposite", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("DistributorId")
                        .HasColumnType("int");

                    b.HasKey("AlbumId", "DistributorId");

                    b.ToTable("AlbumDistributorComposite");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            DistributorId = 2
                        },
                        new
                        {
                            AlbumId = 1,
                            DistributorId = 3
                        },
                        new
                        {
                            AlbumId = 1,
                            DistributorId = 4
                        },
                        new
                        {
                            AlbumId = 1,
                            DistributorId = 5
                        },
                        new
                        {
                            AlbumId = 2,
                            DistributorId = 2
                        },
                        new
                        {
                            AlbumId = 2,
                            DistributorId = 3
                        },
                        new
                        {
                            AlbumId = 2,
                            DistributorId = 4
                        },
                        new
                        {
                            AlbumId = 3,
                            DistributorId = 1
                        },
                        new
                        {
                            AlbumId = 3,
                            DistributorId = 4
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.Composites.AlbumFormatComposite", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("FormatId")
                        .HasColumnType("int");

                    b.HasKey("AlbumId", "FormatId");

                    b.ToTable("AlbumFormatComposite");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            FormatId = 1
                        },
                        new
                        {
                            AlbumId = 1,
                            FormatId = 2
                        },
                        new
                        {
                            AlbumId = 2,
                            FormatId = 2
                        },
                        new
                        {
                            AlbumId = 2,
                            FormatId = 3
                        },
                        new
                        {
                            AlbumId = 2,
                            FormatId = 4
                        },
                        new
                        {
                            AlbumId = 3,
                            FormatId = 1
                        },
                        new
                        {
                            AlbumId = 3,
                            FormatId = 2
                        },
                        new
                        {
                            AlbumId = 3,
                            FormatId = 3
                        },
                        new
                        {
                            AlbumId = 3,
                            FormatId = 4
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.Composites.SongDistributorComposite", b =>
                {
                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("DistributorId")
                        .HasColumnType("int");

                    b.HasKey("SongId", "DistributorId");

                    b.ToTable("SongDistributorComposite");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            DistributorId = 2
                        },
                        new
                        {
                            SongId = 1,
                            DistributorId = 3
                        },
                        new
                        {
                            SongId = 1,
                            DistributorId = 4
                        },
                        new
                        {
                            SongId = 1,
                            DistributorId = 5
                        },
                        new
                        {
                            SongId = 2,
                            DistributorId = 2
                        },
                        new
                        {
                            SongId = 2,
                            DistributorId = 3
                        },
                        new
                        {
                            SongId = 2,
                            DistributorId = 4
                        },
                        new
                        {
                            SongId = 2,
                            DistributorId = 5
                        },
                        new
                        {
                            SongId = 3,
                            DistributorId = 2
                        },
                        new
                        {
                            SongId = 3,
                            DistributorId = 3
                        },
                        new
                        {
                            SongId = 3,
                            DistributorId = 4
                        },
                        new
                        {
                            SongId = 3,
                            DistributorId = 5
                        },
                        new
                        {
                            SongId = 4,
                            DistributorId = 2
                        },
                        new
                        {
                            SongId = 4,
                            DistributorId = 3
                        },
                        new
                        {
                            SongId = 4,
                            DistributorId = 4
                        },
                        new
                        {
                            SongId = 4,
                            DistributorId = 5
                        },
                        new
                        {
                            SongId = 5,
                            DistributorId = 2
                        },
                        new
                        {
                            SongId = 5,
                            DistributorId = 3
                        },
                        new
                        {
                            SongId = 5,
                            DistributorId = 4
                        },
                        new
                        {
                            SongId = 6,
                            DistributorId = 2
                        },
                        new
                        {
                            SongId = 6,
                            DistributorId = 3
                        },
                        new
                        {
                            SongId = 6,
                            DistributorId = 4
                        },
                        new
                        {
                            SongId = 7,
                            DistributorId = 1
                        },
                        new
                        {
                            SongId = 7,
                            DistributorId = 2
                        },
                        new
                        {
                            SongId = 7,
                            DistributorId = 3
                        },
                        new
                        {
                            SongId = 7,
                            DistributorId = 5
                        },
                        new
                        {
                            SongId = 8,
                            DistributorId = 2
                        },
                        new
                        {
                            SongId = 8,
                            DistributorId = 5
                        },
                        new
                        {
                            SongId = 9,
                            DistributorId = 3
                        },
                        new
                        {
                            SongId = 9,
                            DistributorId = 5
                        },
                        new
                        {
                            SongId = 10,
                            DistributorId = 2
                        },
                        new
                        {
                            SongId = 10,
                            DistributorId = 3
                        },
                        new
                        {
                            SongId = 10,
                            DistributorId = 4
                        },
                        new
                        {
                            SongId = 10,
                            DistributorId = 5
                        },
                        new
                        {
                            SongId = 11,
                            DistributorId = 5
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.Composites.SongFormatComposite", b =>
                {
                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("FormatId")
                        .HasColumnType("int");

                    b.HasKey("SongId", "FormatId");

                    b.ToTable("SongFormatComposite");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 1,
                            FormatId = 2
                        },
                        new
                        {
                            SongId = 2,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 2,
                            FormatId = 2
                        },
                        new
                        {
                            SongId = 3,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 3,
                            FormatId = 2
                        },
                        new
                        {
                            SongId = 4,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 4,
                            FormatId = 2
                        },
                        new
                        {
                            SongId = 5,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 5,
                            FormatId = 2
                        },
                        new
                        {
                            SongId = 5,
                            FormatId = 3
                        },
                        new
                        {
                            SongId = 6,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 6,
                            FormatId = 2
                        },
                        new
                        {
                            SongId = 6,
                            FormatId = 3
                        },
                        new
                        {
                            SongId = 7,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 7,
                            FormatId = 3
                        },
                        new
                        {
                            SongId = 7,
                            FormatId = 4
                        },
                        new
                        {
                            SongId = 8,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 9,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 10,
                            FormatId = 1
                        },
                        new
                        {
                            SongId = 10,
                            FormatId = 2
                        },
                        new
                        {
                            SongId = 11,
                            FormatId = 1
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.Copyright", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A license is an agreement between a copyright holder and a user that allows the user to use the work in a way that would otherwise be infringing.",
                            Type = "Licensing"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fair Use allows for the use of copyrighted material without permission from the copyright holder for the purpose of criticism, commentary, news reporting, teaching, scholarship, or research.",
                            Type = "Fair Use"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Derivative works are based on one or more preexisting works, such as a book, article, musical composition, or photograph.",
                            Type = "Derivative Works"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Orphaned works are those whose copyright owners are unknown or cannot be located. These works may be used freely under certain circumstances.",
                            Type = "Orphaned Works"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Public domain includes works that are public which means that they are not protected by copyright and can be used by anyone.",
                            Type = "Public Domain"
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.Distributor", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Distributors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Fake St",
                            City = "Classic City",
                            Name = "Classic Records",
                            State = "CA",
                            ZipCode = 90210
                        },
                        new
                        {
                            Id = 2,
                            Address = "PO Box 1234",
                            City = "Another City",
                            Name = "DigiMusic",
                            State = "VA",
                            Url = "https://www.digimusic.com",
                            ZipCode = 23723
                        },
                        new
                        {
                            Id = 3,
                            Name = "Super Downloads",
                            Url = "https://www.superdownloads.com"
                        },
                        new
                        {
                            Id = 4,
                            Address = "123 Sunset Blvd.",
                            City = "Las Vegas",
                            Name = "Great Music Distro",
                            State = "NV",
                            Url = "https://www.GMD.com",
                            ZipCode = 89123
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cheap Music Digital",
                            Url = "https://www.CheapSongs.com"
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.Format", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Formats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Digital Download"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Compact Disc"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Cassette Tape"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Record"
                        },
                        new
                        {
                            Id = 5,
                            Type = "Other"
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.Genre", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreType = "Psytrance",
                            Rating = 11
                        },
                        new
                        {
                            Id = 2,
                            GenreType = "Electronic",
                            Rating = 22
                        },
                        new
                        {
                            Id = 3,
                            GenreType = "Pop Electronic",
                            Rating = 33
                        },
                        new
                        {
                            Id = 4,
                            GenreType = "Pop",
                            Rating = 44
                        },
                        new
                        {
                            Id = 5,
                            GenreType = "Disco",
                            Rating = 55
                        },
                        new
                        {
                            Id = 6,
                            GenreType = "Pop Disco",
                            Rating = 66
                        },
                        new
                        {
                            Id = 7,
                            GenreType = "Television OST",
                            Rating = 77
                        },
                        new
                        {
                            Id = 8,
                            GenreType = "Ambient",
                            Rating = 88
                        },
                        new
                        {
                            Id = 9,
                            GenreType = "Classic Electronic",
                            Rating = 99
                        },
                        new
                        {
                            Id = 10,
                            GenreType = "Various",
                            Rating = 11
                        },
                        new
                        {
                            Id = 11,
                            GenreType = "Other",
                            Rating = 22
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.Song", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CopyrightId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<bool?>("ForSale")
                        .HasColumnType("bit");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Artist = "Psyonysus",
                            CopyrightId = 1,
                            Duration = new TimeSpan(0, 0, 8, 25, 0),
                            ForSale = true,
                            Genre = "Psytrance",
                            GenreId = 1,
                            Rating = 11,
                            Title = "Exit Samsara"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 1,
                            Artist = "Psyonysus",
                            CopyrightId = 2,
                            Duration = new TimeSpan(0, 0, 8, 36, 0),
                            ForSale = false,
                            Genre = "Psytrance",
                            GenreId = 1,
                            Rating = 22,
                            Title = "Tryptonite"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 1,
                            Artist = "LIFTSHIFT",
                            CopyrightId = 3,
                            Duration = new TimeSpan(0, 0, 9, 26, 0),
                            ForSale = true,
                            Genre = "Psytrance",
                            GenreId = 1,
                            Rating = 33,
                            Title = "Plant Life"
                        },
                        new
                        {
                            Id = 4,
                            Artist = "Stereofeld",
                            CopyrightId = 1,
                            Duration = new TimeSpan(0, 0, 6, 55, 0),
                            ForSale = false,
                            Genre = "Psytrance",
                            GenreId = 1,
                            Rating = 44,
                            Title = "No Fear"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 2,
                            Artist = "Justice",
                            CopyrightId = 2,
                            Duration = new TimeSpan(0, 0, 3, 12, 0),
                            ForSale = true,
                            Genre = "Pop electronic",
                            GenreId = 3,
                            Rating = 55,
                            Title = "Genesis"
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 2,
                            Artist = "Sir Sly",
                            CopyrightId = 3,
                            Duration = new TimeSpan(0, 0, 3, 49, 0),
                            ForSale = false,
                            Genre = "Pop",
                            GenreId = 4,
                            Rating = 66,
                            Title = "High"
                        },
                        new
                        {
                            Id = 7,
                            AlbumId = 2,
                            Artist = "Jungle",
                            CopyrightId = 1,
                            Duration = new TimeSpan(0, 0, 2, 28, 0),
                            ForSale = true,
                            Genre = "Pop Disco",
                            GenreId = 6,
                            Rating = 77,
                            Title = "Busy Earnin'"
                        },
                        new
                        {
                            Id = 8,
                            AlbumId = 3,
                            Artist = "Bignic",
                            CopyrightId = 2,
                            Duration = new TimeSpan(0, 0, 5, 26, 0),
                            ForSale = false,
                            Genre = "Television OST",
                            GenreId = 7,
                            Rating = 88,
                            Title = "Gladius"
                        },
                        new
                        {
                            Id = 9,
                            Artist = "In Quantum",
                            CopyrightId = 3,
                            Duration = new TimeSpan(0, 0, 4, 6, 0),
                            ForSale = true,
                            Genre = "Ambient",
                            GenreId = 8,
                            Rating = 99,
                            Title = "Odyssey"
                        },
                        new
                        {
                            Id = 10,
                            AlbumId = 2,
                            Artist = "Fatboy Slim",
                            CopyrightId = 1,
                            Duration = new TimeSpan(0, 0, 3, 46, 0),
                            ForSale = true,
                            Genre = "Pop Electronic",
                            GenreId = 3,
                            Rating = 11,
                            Title = "Bird of Prey"
                        },
                        new
                        {
                            Id = 11,
                            AlbumId = 3,
                            Artist = "Ivan Torrent",
                            CopyrightId = 2,
                            Duration = new TimeSpan(0, 0, 4, 54, 0),
                            ForSale = true,
                            Genre = "Classic Electronic",
                            GenreId = 9,
                            Rating = 22,
                            Title = "Architects of Life (Feat. Celica Soldream)"
                        });
                });

            modelBuilder.Entity("DotNetPracticeExamples.Models.SongWithImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SongsWithImage");
                });
#pragma warning restore 612, 618
        }
    }
}
